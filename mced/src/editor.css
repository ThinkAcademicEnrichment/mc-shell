/* General layout for the entire page */
html, body {
    height: 100vh; /* Use 100% of the viewport height */
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    background-color: #f0f0f0;
    color: #333;
    overflow: hidden; /* Prevent the body itself from scrolling */
}

/* Make the grid container fill its parent (the body) */
.editor-layout {
    display: grid;
    height: 100%; /* Fill the full height of the body */
    grid-template-columns: 300px 1fr 100ch;
    transition: grid-template-columns 0.25s ease-in-out;
    gap: 8px;
    padding: 8px;
    box-sizing: border-box;
}
/* --- Left Panel: Power Library --- */
#power-library-panel {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
    overflow-y: auto; /* Allow scrolling if the list of powers is long */
    min-width: 0;
}

#power-library-panel h2 {
    padding: 12px 16px;
    margin: 0;
    border-bottom: 1px solid #e0e0e0;
    font-size: 16px;
}

#power-list {
    padding: 8px;
    flex-grow: 1; /* Allow the list to fill the available space */
}

/* --- Right Panel: Main Content --- */
#main-content-panel {
    display: flex;
    flex-direction: column; /* Stack the toolbar, editor, and preview vertically */
    gap: 8px;
    min-width: 0;
}

#controls {
    flex-shrink: 0; /* Prevent the control bar from shrinking */
    background: #ffffff;
    padding: 8px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    display: flex;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
    gap: 8px;
}

#controls button {
    padding: 6px 12px;
    border: 1px solid #ccc;
    background-color: #f7f7f7;
    border-radius: 4px;
    cursor: pointer;
}

#controls button:hover {
    background-color: #e9e9e9;
    border-color: #bbb;
}

/*#editor-preview-pane {*/
/*    flex-grow: 1; !* This pane will take up the remaining vertical space *!*/
/*    display: flex;*/
/*    flex-direction: column; !* To stack Blockly and the code display *!*/
/*    border: 1px solid #ccc;*/
/*    border-radius: 8px;*/
/*    overflow: hidden; !* Hide anything that spills out *!*/
/*    background-color: #ffffff;*/
/*    min-height: 0; !* Add this for better flexbox behavior in some browsers *!*/
/*}*/

#blocklyDiv {
    flex-grow: 1; /* Blockly editor takes up most of the space in this pane */
    position: relative; /* Needed for Blockly's UI elements */
}

#code-container {
    /* REMOVED: height: 250px; */
    /* REMOVED: flex-shrink: 0; */

    /* ADDED: This tells the element to grow and fill all available vertical space */
    /* in its parent flex container (#code-preview-panel). */
    flex-grow: 1;

    /* These properties remain the same */
    margin: 0;
    overflow: auto; /* For vertical AND horizontal scrolling if needed */
    background-color: #272822;
    color: #f8f8f2;
    font-family: 'Fira Code', 'Dank Mono', monospace;
    font-size: 14px;
    line-height: 1.5;
    padding: 1em;
    box-sizing: border-box;

    /* Wrapping rules remain the same */
    white-space: pre-wrap;
    overflow-wrap: break-word;
    word-break: break-word;
}

/* --- MODAL STYLES --- */

[x-cloak] {
    display: none !important;
}

.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    z-index: 1000;
}

.modal-content {
    position: fixed;
    top: 50%;
    left: 50%;
    /* Start with the final transform state so transitions work correctly */
    transform: translate(-50%, -50%) scale(1);
    background-color: white;
    padding: 25px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    z-index: 1001;
    width: 90%;
    max-width: 500px;
    /* Define the transition properties on the base class */
    transition: all 0.2s ease-out;
}


/* --- CORRECTED ALPINE.JS TRANSITION CLASSES --- */
/* These are the classes that Alpine v3 actually adds to the element */

/* State BEFORE the element enters. It's invisible and slightly smaller. */
.enter-start {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
}
/* State AFTER the element has finished entering. Fully visible. */
.enter-end {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}
/* State BEFORE the element starts to leave. Fully visible. */
.leave-start {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}
/* State AFTER the element has finished leaving. Invisible. */
.leave-end {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
}


/* When the library is collapsed, shrink the first column */
.editor-layout.library-collapsed {
    grid-template-columns: 45px 1fr 100ch;
}

/* NEW: When the code preview is collapsed, shrink the third column */
/*.editor-layout.code-collapsed {*/
/*    grid-template-columns: 300px 1fr 0px;*/
/*}*/
/* When the code preview is collapsed, shrink the third column to 45px */
.editor-layout.code-collapsed {
    grid-template-columns: 300px 1fr 40ch;
}

/* Also update the rule for when both are collapsed */
.editor-layout.library-collapsed.code-collapsed {
    grid-template-columns: 45px 1fr 40ch;
}
/* Handle both being collapsed at the same time */
/*.editor-layout.library-collapsed.code-collapsed {*/
/*    grid-template-columns: 45px 1fr 0px;*/
/*}*/

/* NEW: Add styles for the new right-hand column */
#code-preview-panel {
    display: flex;
    flex-direction: column;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    overflow: hidden; /* Hide content when collapsed */
}

/* Add a transition to the grid layout for smooth sidebar animation */
/*.editor-layout {*/
/*    display: grid;*/
/*    grid-template-columns: 300px 1fr;*/
/*    transition: grid-template-columns 0.25s ease-in-out;*/
/*    !* ... other existing styles ... *!*/
/*}*/

/* When the library is collapsed, animate the grid column to a small width */
/*.editor-layout.library-collapsed {*/
/*    grid-template-columns: 45px 1fr; !* Shrink to just wide enough for the button *!*/
/*}*/

/* Add a transition for the code container's height and padding */
/*#code-container {*/
/*    transition: height 0.25s ease-in-out, padding 0.25s ease-in-out, border 0.25s ease-in-out;*/
/*    !* ... all your other existing styles for #code-container ... *!*/
/*}*/

/* When the code pane is collapsed, set the code container's height to 0 */
/*#editor-preview-pane.code-pane-collapsed #code-container {*/
/*    height: 0;*/
/*    padding-top: 0;*/
/*    padding-bottom: 0;*/
/*    border-top-width: 0;*/
/*}*/

/* --- You may also need to add these styles for the new panel-header --- */
.panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 16px;
    border-bottom: 1px solid #e0e0e0;
    flex-shrink: 0; /* Prevent header from shrinking when content scrolls */
}
#power-library-panel h2 {
    padding: 0; /* Remove padding from h2 since it's now in panel-header */
    border-bottom: none;
    margin: 0;
    font-size: 16px;
}
.code-header {
    padding: 4px 10px;
    background-color: #f7f7f7;
    border-top: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    color: #555;
    font-size: 13px;
    font-weight: 500;
}
.toggle-btn {
    background: none;
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    line-height: 1;
    padding: 2px 6px;
}
.toggle-btn:hover {
    background-color: #e0e0e0;
}

/* When the parent pane is marked as collapsed... */
/*#editor-preview-pane.code-pane-collapsed .code-header {*/
/*    !* You might want to keep the header visible to allow re-opening,*/
/*       but we can hide the text inside it if we want.*/
/*       Or just let it be. The toggle button is what matters. *!*/
/*}*/

/*!* ...target the code container and set its height to 0. *!*/
/*!* This makes it take up no space in the flex layout. *!*/
/*#editor-preview-pane.code-pane-collapsed #code-container {*/
/*    height: 0;*/
/*    padding-top: 0;*/
/*    padding-bottom: 0;*/
/*    border-top-width: 0;*/
/*    overflow: hidden; !* Hide scrollbars during collapse *!*/
/*}*/

/*
Because #code-container now takes up 0 height, the #blocklyDiv (with its flex-grow: 1)
will automatically expand to fill the space that was just freed up inside the
#editor-preview-pane flex container.
*/